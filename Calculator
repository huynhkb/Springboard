window.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById("calc-form");
  if (form) {
    setupIntialValues();
    form.addEventListener("submit", function(e) {
      e.preventDefault();
      update();
    });
  }
});

function getCurrentUIValues() {
  return {
    amount: +(document.getElementById("loan-amount").value),
    years: +(document.getElementById("loan-years").value),
    rate: +(document.getElementById("loan-rate").value),
  }
}

// Get the inputs from the DOM.
// Put some default values in the inputs
// Call a function to calculate the current monthly payment
function setupIntialValues() {
  const values = { amount: 5000, years: 5, rate: 3 };
  const amountUI = document.getElementById("loan-amount");
  amountUI.value = values.amount;
  const yearsUI = document.getElementById("loan-years");
  yearsUI.value = values.years;
  const rateUI = document.getElementById("loan-rate");
  rateUI.value = values.rate;
  update();
}

// Get the current values from the UI
// Update the monthly payment
function update() {
  const currentValues = getCurrentUIValues();
  updateMonthly(calculateMonthlyPayment(currentValues));
}

// Given an object of values (a value has amount, years and rate ),
// calculate the monthly payment.  The output should be a string
// that always has 2 decimal places.
function calculateMonthlyPayment(values) {
  const i = (values.rate / 100 / 12);
  const n = Math.floor(values.years * 12);
  return (((values.amount * i) / (1 - (Math.pow((1 + i), -n)))).toFixed(2));
}

// Given a string representing the monthly payment value,
// update the UI to show the value.
function updateMonthly(monthly) {
  const displayRate = document.getElementById("monthly-payment");
  displayRate.innerText = '$' + monthly; 
}



//////TESTS//////


it('should calculate the monthly rate correctly', function () {
  const values = { amount: 1000, years: 2, rate: 4};
  expect(calculateMonthlyPayment(values)).toEqual('43.42')
});


it("should return a result with 2 decimal places", function() {
  const values = { amount: 3042, years: 4.6, rate: 5};
  expect(calculateMonthlyPayment(values)).toEqual('62.00')
});


describe("Testing high and low numbers", function() {
  it("should calculate very low numbers", function() {
    const values = { amount: 1, years: 0.1, rate: 0.1};
    expect(calculateMonthlyPayment(values)).toEqual('1.00')
  })
  it("should calculate very high numbers", function() {
    const values = { amount: 1000000, years: 200, rate: 99.99};
    expect(calculateMonthlyPayment(values)).toEqual('83325.00')
  })
})
